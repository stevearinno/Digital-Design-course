-- VHDL Entity alien_game_lib.c3_t4_bullet_flight.symbol
--
-- Created:
--          by - Thinkpad X1.UNKNOWN (LENOVO-PC)
--          at - 17:50:10 11/21/2019
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY c3_t4_bullet_flight IS
   PORT( 
      btn           : IN     std_logic_vector (3 DOWNTO 0);
      clk           : IN     std_logic;
      en            : IN     std_logic;
      gun_x         : IN     std_logic_vector (7 DOWNTO 0);
      pause_sw      : IN     std_logic;
      rst_n         : IN     std_logic;
      bullet_colour : OUT    std_logic_vector (23 DOWNTO 0);
      bullet_x      : OUT    std_logic_vector (7 DOWNTO 0);
      bullet_y      : OUT    std_logic_vector (7 DOWNTO 0)
   );

-- Declarations

END c3_t4_bullet_flight ;

--
-- VHDL Architecture alien_game_lib.c3_t4_bullet_flight.struct
--
-- Created:
--          by - Thinkpad X1.UNKNOWN (LENOVO-PC)
--          at - 17:50:10 11/21/2019
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY alien_game_lib;

ARCHITECTURE struct OF c3_t4_bullet_flight IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL d               : std_logic_vector(7 DOWNTO 0);
   SIGNAL d1              : std_logic_vector(23 DOWNTO 0);
   SIGNAL d2              : std_logic_vector(7 DOWNTO 0);
   SIGNAL din1            : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout            : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout1           : std_logic;
   SIGNAL dout2           : std_logic;
   SIGNAL dout3           : std_logic;
   SIGNAL dout4           : std_logic;
   SIGNAL dout5           : std_logic;
   SIGNAL dout6           : std_logic;
   SIGNAL dout7           : std_logic;
   SIGNAL dout8           : std_logic;
   SIGNAL dout9           : std_logic_vector(7 DOWNTO 0);
   SIGNAL out_left_shift  : std_logic_vector(7 DOWNTO 0);
   SIGNAL out_right_shift : std_logic_vector(7 DOWNTO 0);

   -- Implicit buffer signal declarations
   SIGNAL bullet_x_internal : std_logic_vector (7 DOWNTO 0);
   SIGNAL bullet_y_internal : std_logic_vector (7 DOWNTO 0);


   -- ModuleWare signal declarations(v1.12) for instance 'U_3' of 'adff'
   SIGNAL mw_U_3reg_cval : std_logic_vector(7 DOWNTO 0);

   -- ModuleWare signal declarations(v1.12) for instance 'U_9' of 'adff'
   SIGNAL mw_U_9reg_cval : std_logic_vector(23 DOWNTO 0);

   -- ModuleWare signal declarations(v1.12) for instance 'U_10' of 'adff'
   SIGNAL mw_U_10reg_cval : std_logic_vector(7 DOWNTO 0);

   -- Component Declarations
   COMPONENT c2_t4_right_shifter
   PORT (
      in_right_shift  : IN     std_logic_vector (7 DOWNTO 0);
      out_right_shift : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : c2_t4_right_shifter USE ENTITY alien_game_lib.c2_t4_right_shifter;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_3' of 'adff'
   bullet_y_internal <= mw_U_3reg_cval;
   u_3seq_proc: PROCESS (clk, rst_n)
   BEGIN
      IF (rst_n = '0') THEN
         mw_U_3reg_cval <= "00000000";
      ELSIF (clk'EVENT AND clk='1') THEN
         mw_U_3reg_cval <= d;
      END IF;
   END PROCESS u_3seq_proc;

   -- ModuleWare code(v1.12) for instance 'U_9' of 'adff'
   bullet_colour <= mw_U_9reg_cval;
   u_9seq_proc: PROCESS (clk, rst_n)
   BEGIN
      IF (rst_n = '0') THEN
         mw_U_9reg_cval <= "000000000000000000000000";
      ELSIF (clk'EVENT AND clk='1') THEN
         mw_U_9reg_cval <= d1;
      END IF;
   END PROCESS u_9seq_proc;

   -- ModuleWare code(v1.12) for instance 'U_10' of 'adff'
   bullet_x_internal <= mw_U_10reg_cval;
   u_10seq_proc: PROCESS (clk, rst_n)
   BEGIN
      IF (rst_n = '0') THEN
         mw_U_10reg_cval <= "00000000";
      ELSIF (clk'EVENT AND clk='1') THEN
         mw_U_10reg_cval <= d2;
      END IF;
   END PROCESS u_10seq_proc;

   -- ModuleWare code(v1.12) for instance 'U_15' of 'and'
   dout8 <= btn(0) AND dout7;

   -- ModuleWare code(v1.12) for instance 'U_1' of 'constval'
   din1 <= "00100000";

   -- ModuleWare code(v1.12) for instance 'U_7' of 'constval'
   d1 <= "000000001111111100000000";

   -- ModuleWare code(v1.12) for instance 'U_2' of 'mux'
   u_2combo_proc: PROCESS(bullet_y_internal, din1, dout8)
   BEGIN
      CASE dout8 IS
      WHEN '0' => dout <= bullet_y_internal;
      WHEN '1' => dout <= din1;
      WHEN OTHERS => dout <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_2combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_5' of 'mux'
   u_5combo_proc: PROCESS(bullet_y_internal, out_left_shift, en)
   BEGIN
      CASE en IS
      WHEN '0' => dout9 <= bullet_y_internal;
      WHEN '1' => dout9 <= out_left_shift;
      WHEN OTHERS => dout9 <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_5combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_16' of 'mux'
   u_16combo_proc: PROCESS(bullet_x_internal, out_right_shift, dout8)
   BEGIN
      CASE dout8 IS
      WHEN '0' => d2 <= bullet_x_internal;
      WHEN '1' => d2 <= out_right_shift;
      WHEN OTHERS => d2 <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_16combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_17' of 'mux'
   u_17combo_proc: PROCESS(dout9, bullet_y_internal, pause_sw)
   BEGIN
      CASE pause_sw IS
      WHEN '0' => d <= dout9;
      WHEN '1' => d <= bullet_y_internal;
      WHEN OTHERS => d <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_17combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_4' of 'or'
   dout1 <= bullet_y_internal(7) OR bullet_y_internal(6);

   -- ModuleWare code(v1.12) for instance 'U_6' of 'or'
   dout2 <= bullet_y_internal(5) OR bullet_y_internal(4);

   -- ModuleWare code(v1.12) for instance 'U_8' of 'or'
   dout3 <= bullet_y_internal(3) OR bullet_y_internal(2);

   -- ModuleWare code(v1.12) for instance 'U_11' of 'or'
   dout4 <= bullet_y_internal(1) OR bullet_y_internal(0);

   -- ModuleWare code(v1.12) for instance 'U_12' of 'or'
   dout5 <= dout1 OR dout2;

   -- ModuleWare code(v1.12) for instance 'U_13' of 'or'
   dout6 <= dout3 OR dout4;

   -- ModuleWare code(v1.12) for instance 'U_14' of 'or'
   dout7 <= NOT(dout5 OR dout6);

   -- Instance port mappings.
   U_0 : c2_t4_right_shifter
      PORT MAP (
         in_right_shift  => dout,
         out_right_shift => out_left_shift
      );
   U_18 : c2_t4_right_shifter
      PORT MAP (
         in_right_shift  => gun_x,
         out_right_shift => out_right_shift
      );

   -- Implicit buffered output assignments
   bullet_x <= bullet_x_internal;
   bullet_y <= bullet_y_internal;

END struct;
