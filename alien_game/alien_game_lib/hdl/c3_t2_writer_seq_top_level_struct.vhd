-- VHDL Entity alien_game_lib.c3_t2_writer_seq_top_level.symbol
--
-- Created:
--          by - wirdatma.UNKNOWN (HTC219-709-SPC)
--          at - 15:48:30 22.10.2019
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY c3_t2_writer_seq_top_level IS
   PORT( 
      btn         : IN     std_logic_vector (3 DOWNTO 0);
      clk         : IN     std_logic;
      rst_n       : IN     std_logic;
      write_ready : IN     std_logic;
      color_BGR   : OUT    std_logic_vector (23 DOWNTO 0);
      frame_done  : OUT    std_logic;
      write       : OUT    std_logic;
      x_coord2    : OUT    std_logic_vector (7 DOWNTO 0);
      y_coord2    : OUT    std_logic_vector (7 DOWNTO 0)
   );

-- Declarations

END c3_t2_writer_seq_top_level ;

--
-- VHDL Architecture alien_game_lib.c3_t2_writer_seq_top_level.struct
--
-- Created:
--          by - wirdatma.UNKNOWN (HTC219-709-SPC)
--          at - 15:48:30 22.10.2019
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY alien_game_lib;

ARCHITECTURE struct OF c3_t2_writer_seq_top_level IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL alien_color   : std_logic_vector(23 DOWNTO 0);
   SIGNAL enable        : std_logic;
   SIGNAL gun_color     : std_logic_vector(23 DOWNTO 0);
   SIGNAL gun_px_idx    : std_logic_vector(2 DOWNTO 0);
   SIGNAL module_select : std_logic_vector(1 DOWNTO 0);
   SIGNAL x_coord       : std_logic_vector(7 DOWNTO 0);
   SIGNAL x_coord1      : std_logic_vector(7 DOWNTO 0);
   SIGNAL y_coord       : std_logic_vector(7 DOWNTO 0);
   SIGNAL y_coord1      : std_logic_vector(7 DOWNTO 0);


   -- Component Declarations
   COMPONENT c2_t7_basic_alien
   PORT (
      clock          : IN     std_logic ;
      enable         : IN     std_logic ;
      hit            : IN     std_logic ;
      rst_n          : IN     std_logic ;
      alien_color    : OUT    std_logic_vector (23 DOWNTO 0);
      alien_defeated : OUT    std_logic_vector (23 DOWNTO 0);
      x_coord        : OUT    std_logic_vector (7 DOWNTO 0);
      y_coord        : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT c3_t1_gun_module
   PORT (
      btn        : IN     std_logic_vector (3 DOWNTO 0);
      clk        : IN     std_logic ;
      enable     : IN     std_logic ;
      gun_px_idx : IN     std_logic_vector (2 DOWNTO 0);
      rst_n      : IN     std_logic ;
      gun_color  : OUT    std_logic_vector (23 DOWNTO 0);
      x_coord    : OUT    std_logic_vector (7 DOWNTO 0);
      y_coord    : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT c3_t2_write_sequencer
   PORT (
      clk           : IN     std_logic ;
      rst_n         : IN     std_logic ;
      write_ready   : IN     std_logic ;
      enable        : OUT    std_logic ;
      frame_done    : OUT    std_logic ;
      gun_px_idx    : OUT    std_logic_vector (2 DOWNTO 0);
      module_select : OUT    std_logic_vector (1 DOWNTO 0);
      write         : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : c2_t7_basic_alien USE ENTITY alien_game_lib.c2_t7_basic_alien;
   FOR ALL : c3_t1_gun_module USE ENTITY alien_game_lib.c3_t1_gun_module;
   FOR ALL : c3_t2_write_sequencer USE ENTITY alien_game_lib.c3_t2_write_sequencer;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_4' of 'mux'
   u_4combo_proc: PROCESS(x_coord, x_coord1, module_select)
   BEGIN
      CASE module_select IS
      WHEN "00" => x_coord2 <= x_coord;
      WHEN "01" => x_coord2 <= x_coord1;
      WHEN OTHERS => x_coord2 <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_4combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_5' of 'mux'
   u_5combo_proc: PROCESS(y_coord, y_coord1, module_select)
   BEGIN
      CASE module_select IS
      WHEN "00" => y_coord2 <= y_coord;
      WHEN "01" => y_coord2 <= y_coord1;
      WHEN OTHERS => y_coord2 <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_5combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_6' of 'mux'
   u_6combo_proc: PROCESS(alien_color, gun_color, module_select)
   BEGIN
      CASE module_select IS
      WHEN "00" => color_BGR <= alien_color;
      WHEN "01" => color_BGR <= gun_color;
      WHEN OTHERS => color_BGR <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_6combo_proc;

   -- Instance port mappings.
   U_2 : c2_t7_basic_alien
      PORT MAP (
         clock          => clk,
         enable         => enable,
         hit            => btn(0),
         rst_n          => rst_n,
         alien_color    => alien_color,
         alien_defeated => OPEN,
         x_coord        => x_coord,
         y_coord        => y_coord
      );
   U_3 : c3_t1_gun_module
      PORT MAP (
         btn        => btn,
         clk        => clk,
         enable     => enable,
         gun_px_idx => gun_px_idx,
         rst_n      => rst_n,
         gun_color  => gun_color,
         x_coord    => x_coord1,
         y_coord    => y_coord1
      );
   U_0 : c3_t2_write_sequencer
      PORT MAP (
         clk           => clk,
         rst_n         => rst_n,
         write_ready   => write_ready,
         enable        => enable,
         frame_done    => frame_done,
         gun_px_idx    => gun_px_idx,
         module_select => module_select,
         write         => write
      );

END struct;
