-- VHDL Entity alien_game_lib.c3_t1_gun_module.symbol
--
-- Created:
--          by - wirdatma.UNKNOWN (HTC219-709-SPC)
--          at - 14:25:49 22.10.2019
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY c3_t1_gun_module IS
   PORT( 
      btn        : IN     std_logic_vector (3 DOWNTO 0);
      clk        : IN     std_logic;
      enable     : IN     std_logic;
      gun_px_idx : IN     std_logic_vector (2 DOWNTO 0);
      rst_n      : IN     std_logic;
      gun_color  : OUT    std_logic_vector (23 DOWNTO 0);
      x_coord    : OUT    std_logic_vector (7 DOWNTO 0);
      y_coord    : OUT    std_logic_vector (7 DOWNTO 0)
   );

-- Declarations

END c3_t1_gun_module ;

--
-- VHDL Architecture alien_game_lib.c3_t1_gun_module.struct
--
-- Created:
--          by - wirdatma.UNKNOWN (HTC219-709-SPC)
--          at - 14:25:44 22.10.2019
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY alien_game_lib;

ARCHITECTURE struct OF c3_t1_gun_module IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL d     : std_logic_vector(7 DOWNTO 0);
   SIGNAL d1    : std_logic_vector(7 DOWNTO 0);
   SIGNAL d2    : std_logic_vector(7 DOWNTO 0);
   SIGNAL d3    : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout  : std_logic;
   SIGNAL dout1 : std_logic;
   SIGNAL dout2 : std_logic_vector(1 DOWNTO 0);
   SIGNAL dout3 : std_logic;
   SIGNAL dout4 : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout5 : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout6 : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout7 : std_logic_vector(7 DOWNTO 0);
   SIGNAL q     : std_logic_vector(7 DOWNTO 0);
   SIGNAL q1    : std_logic_vector(7 DOWNTO 0);
   SIGNAL q2    : std_logic_vector(7 DOWNTO 0);


   -- ModuleWare signal declarations(v1.12) for instance 'U_16' of 'adff'
   SIGNAL mw_U_16reg_cval : std_logic_vector(7 DOWNTO 0);

   -- ModuleWare signal declarations(v1.12) for instance 'U_17' of 'adff'
   SIGNAL mw_U_17reg_cval : std_logic_vector(7 DOWNTO 0);

   -- ModuleWare signal declarations(v1.12) for instance 'U_18' of 'adff'
   SIGNAL mw_U_18reg_cval : std_logic_vector(7 DOWNTO 0);

   -- ModuleWare signal declarations(v1.12) for instance 'U_19' of 'adff'
   SIGNAL mw_U_19reg_cval : std_logic_vector(7 DOWNTO 0);

   -- ModuleWare signal declarations(v1.12) for instance 'U_20' of 'adff'
   SIGNAL mw_U_20reg_cval : std_logic_vector(7 DOWNTO 0);

   -- Component Declarations
   COMPONENT c3_t1_pixel_shifter
   PORT (
      end_sel   : IN     std_logic ;
      pixel_in  : IN     std_logic_vector (7 DOWNTO 0);
      selector  : IN     std_logic_vector (1 DOWNTO 0);
      pixel_out : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : c3_t1_pixel_shifter USE ENTITY alien_game_lib.c3_t1_pixel_shifter;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_16' of 'adff'
   x_coord <= mw_U_16reg_cval;
   u_16seq_proc: PROCESS (clk, rst_n)
   BEGIN
      IF (rst_n = '0') THEN
         mw_U_16reg_cval <= "00010000";
      ELSIF (clk'EVENT AND clk='1') THEN
         mw_U_16reg_cval <= d3;
      END IF;
   END PROCESS u_16seq_proc;

   -- ModuleWare code(v1.12) for instance 'U_17' of 'adff'
   y_coord <= mw_U_17reg_cval;
   u_17seq_proc: PROCESS (clk, rst_n)
   BEGIN
      IF (rst_n = '0') THEN
         mw_U_17reg_cval <= "10000000";
      ELSIF (clk'EVENT AND clk='1') THEN
         mw_U_17reg_cval <= dout7;
      END IF;
   END PROCESS u_17seq_proc;

   -- ModuleWare code(v1.12) for instance 'U_18' of 'adff'
   q <= mw_U_18reg_cval;
   u_18seq_proc: PROCESS (clk, rst_n)
   BEGIN
      IF (rst_n = '0') THEN
         mw_U_18reg_cval <= "00010000";
      ELSIF (clk'EVENT AND clk='1') THEN
         mw_U_18reg_cval <= d;
      END IF;
   END PROCESS u_18seq_proc;

   -- ModuleWare code(v1.12) for instance 'U_19' of 'adff'
   q1 <= mw_U_19reg_cval;
   u_19seq_proc: PROCESS (clk, rst_n)
   BEGIN
      IF (rst_n = '0') THEN
         mw_U_19reg_cval <= "00001000";
      ELSIF (clk'EVENT AND clk='1') THEN
         mw_U_19reg_cval <= d1;
      END IF;
   END PROCESS u_19seq_proc;

   -- ModuleWare code(v1.12) for instance 'U_20' of 'adff'
   q2 <= mw_U_20reg_cval;
   u_20seq_proc: PROCESS (clk, rst_n)
   BEGIN
      IF (rst_n = '0') THEN
         mw_U_20reg_cval <= "00000100";
      ELSIF (clk'EVENT AND clk='1') THEN
         mw_U_20reg_cval <= d2;
      END IF;
   END PROCESS u_20seq_proc;

   -- ModuleWare code(v1.12) for instance 'U_1' of 'and'
   dout <= btn(1) AND enable;

   -- ModuleWare code(v1.12) for instance 'U_2' of 'and'
   dout1 <= enable AND btn(3);

   -- ModuleWare code(v1.12) for instance 'U_0' of 'constval'
   gun_color <= "100000001000000010000000";

   -- ModuleWare code(v1.12) for instance 'U_9' of 'constval'
   dout4 <= "10000000";

   -- ModuleWare code(v1.12) for instance 'U_10' of 'constval'
   dout5 <= "01000000";

   -- ModuleWare code(v1.12) for instance 'U_12' of 'constval'
   dout6 <= "00100000";

   -- ModuleWare code(v1.12) for instance 'U_3' of 'merge'
   dout2 <= dout1 & dout;

   -- ModuleWare code(v1.12) for instance 'U_4' of 'mux'
   u_4combo_proc: PROCESS(q, q1, q2, gun_px_idx)
   BEGIN
      CASE gun_px_idx IS
      WHEN "000" => d3 <= q;
      WHEN "001" => d3 <= q1;
      WHEN "010" => d3 <= q2;
      WHEN "011" => d3 <= q;
      WHEN "100" => d3 <= q1;
      WHEN "101" => d3 <= q2;
      WHEN "110" => d3 <= q1;
      WHEN "111" => d3 <= q1;
      WHEN OTHERS => d3 <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_4combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_11' of 'mux'
   u_11combo_proc: PROCESS(dout4, dout5, dout6, gun_px_idx)
   BEGIN
      CASE gun_px_idx IS
      WHEN "000" => dout7 <= dout4;
      WHEN "001" => dout7 <= dout4;
      WHEN "010" => dout7 <= dout4;
      WHEN "011" => dout7 <= dout5;
      WHEN "100" => dout7 <= dout5;
      WHEN "101" => dout7 <= dout5;
      WHEN "110" => dout7 <= dout6;
      WHEN "111" => dout7 <= dout6;
      WHEN OTHERS => dout7 <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_11combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_5' of 'or'
   dout3 <= q(7) OR q2(0);

   -- Instance port mappings.
   U_13 : c3_t1_pixel_shifter
      PORT MAP (
         end_sel   => dout3,
         pixel_in  => q,
         selector  => dout2,
         pixel_out => d
      );
   U_14 : c3_t1_pixel_shifter
      PORT MAP (
         end_sel   => dout3,
         pixel_in  => q1,
         selector  => dout2,
         pixel_out => d1
      );
   U_15 : c3_t1_pixel_shifter
      PORT MAP (
         end_sel   => dout3,
         pixel_in  => q2,
         selector  => dout2,
         pixel_out => d2
      );

END struct;
