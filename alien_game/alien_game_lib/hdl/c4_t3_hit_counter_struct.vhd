-- VHDL Entity alien_game_lib.c4_t3_hit_counter.symbol
--
-- Created:
--          by - wirdatma.UNKNOWN (HTC219-704-SPC)
--          at - 16:12:04  8.11.2019
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY c4_t3_hit_counter IS
   PORT( 
      clk       : IN     std_logic;
      hit       : IN     std_logic;
      rst_n     : IN     std_logic;
      hit_count : OUT    std_logic_vector (1 DOWNTO 0)
   );

-- Declarations

END c4_t3_hit_counter ;

--
-- VHDL Architecture alien_game_lib.c4_t3_hit_counter.struct
--
-- Created:
--          by - wirdatma.UNKNOWN (HTC219-704-SPC)
--          at - 18:03:40  8.11.2019
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY alien_game_lib;

ARCHITECTURE struct OF c4_t3_hit_counter IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL carry : std_logic;
   SIGNAL din1  : std_logic;
   SIGNAL dout  : std_logic;
   SIGNAL dout1 : std_logic;
   SIGNAL q     : std_logic;
   SIGNAL q1    : std_logic;
   SIGNAL sum   : std_logic;


   -- ModuleWare signal declarations(v1.12) for instance 'U_1' of 'adff'
   SIGNAL mw_U_1reg_cval : std_logic;

   -- ModuleWare signal declarations(v1.12) for instance 'U_2' of 'adff'
   SIGNAL mw_U_2reg_cval : std_logic;

   -- Component Declarations
   COMPONENT c1_t1_half_adder
   PORT (
      sw0   : IN     std_logic ;
      sw1   : IN     std_logic ;
      carry : OUT    std_logic ;
      sum   : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : c1_t1_half_adder USE ENTITY alien_game_lib.c1_t1_half_adder;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_1' of 'adff'
   q <= mw_U_1reg_cval;
   u_1seq_proc: PROCESS (clk, rst_n)
   BEGIN
      IF (rst_n = '0') THEN
         mw_U_1reg_cval <= '0';
      ELSIF (clk'EVENT AND clk='1') THEN
         mw_U_1reg_cval <= dout;
      END IF;
   END PROCESS u_1seq_proc;

   -- ModuleWare code(v1.12) for instance 'U_2' of 'adff'
   q1 <= mw_U_2reg_cval;
   u_2seq_proc: PROCESS (clk, rst_n)
   BEGIN
      IF (rst_n = '0') THEN
         mw_U_2reg_cval <= '0';
      ELSIF (clk'EVENT AND clk='1') THEN
         mw_U_2reg_cval <= dout1;
      END IF;
   END PROCESS u_2seq_proc;

   -- ModuleWare code(v1.12) for instance 'U_6' of 'constval'
   din1 <= '1';

   -- ModuleWare code(v1.12) for instance 'U_3' of 'merge'
   hit_count <= q1 & q;

   -- ModuleWare code(v1.12) for instance 'U_0' of 'mux'
   u_0combo_proc: PROCESS(q, sum, hit)
   BEGIN
      CASE hit IS
      WHEN '0' => dout <= q;
      WHEN '1' => dout <= sum;
      WHEN OTHERS => dout <= 'X';
      END CASE;
   END PROCESS u_0combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_5' of 'mux'
   u_5combo_proc: PROCESS(q1, din1, carry)
   BEGIN
      CASE carry IS
      WHEN '0' => dout1 <= q1;
      WHEN '1' => dout1 <= din1;
      WHEN OTHERS => dout1 <= 'X';
      END CASE;
   END PROCESS u_5combo_proc;

   -- Instance port mappings.
   U_4 : c1_t1_half_adder
      PORT MAP (
         sw0   => q,
         sw1   => hit,
         carry => carry,
         sum   => sum
      );

END struct;
