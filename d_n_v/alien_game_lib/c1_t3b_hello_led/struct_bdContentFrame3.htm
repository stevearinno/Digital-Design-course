<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 16:15:44 on  5.10.2019 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.c1_t3b_hello_led.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - wirdatma.UNKNOWN (HTC219-712-SPC)</span>
<span class=C>--          at - 13:05:26 27.09.2019</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c1_t3b_hello_led <span class=K>IS</span>
   <span class=K>PORT</span>(
      btn   : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (3 <span class=K>DOWNTO</span> 0);
      color : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0);
      x     : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      y     : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c1_t3b_hello_led ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.c1_t3b_hello_led.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - wirdatma.UNKNOWN (HTC219-712-SPC)</span>
<span class=C>--          at - 13:05:20 27.09.2019</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;


<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> c1_t3b_hello_led <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> din0 : <span class=T>std_logic_vector</span>(23 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> din1 : <span class=T>std_logic_vector</span>(23 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> din2 : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> din3 : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> din4 : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> din5 : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);



<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_3' of 'constval'</span>
   din0 <= <span class=S>"000000000000000100101100"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_4' of 'constval'</span>
   din1 <= <span class=S>"000000000000000001100110"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_5' of 'constval'</span>
   din2 <= <span class=S>"00001100"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_6' of 'constval'</span>
   din3 <= <span class=S>"00001111"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_7' of 'constval'</span>
   din4 <= <span class=S>"00011001"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_8' of 'constval'</span>
   din5 <= <span class=S>"00000111"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_0' of 'mux'</span>
   u_0combo_proc: <span class=K>PROCESS</span>(din0, din1, btn)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> btn(0) <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => color <= din0;
      <span class=K>WHEN</span> '1' => color <= din1;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => color <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_0combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_1' of 'mux'</span>
   u_1combo_proc: <span class=K>PROCESS</span>(din2, din3, btn)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> btn(1) <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => x <= din2;
      <span class=K>WHEN</span> '1' => x <= din3;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => x <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_1combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_2' of 'mux'</span>
   u_2combo_proc: <span class=K>PROCESS</span>(din4, din5, btn)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> btn(2) <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => y <= din4;
      <span class=K>WHEN</span> '1' => y <= din5;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => y <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_2combo_proc;

   <span class=C>-- Instance port mappings.</span>

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
