<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 16:15:51 on  5.10.2019 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.c2_t4_right_shifter.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - wirdatma.UNKNOWN (HTC219-713-SPC)</span>
<span class=C>--          at - 12:43:03  2.10.2019</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c2_t4_right_shifter <span class=K>IS</span>
   <span class=K>PORT</span>(
      in_right_shift  : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      out_right_shift : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c2_t4_right_shifter ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.c2_t4_right_shifter.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - wirdatma.UNKNOWN (HTC219-713-SPC)</span>
<span class=C>--          at - 12:55:05  2.10.2019</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;


<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> c2_t4_right_shifter <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> dout  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout1 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout2 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout3 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout4 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout5 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout6 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout7 : <span class=T>std_logic</span>;


   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_0' of 'split'</span>
   <span class=K>SIGNAL</span> mw_U_0temp_din : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);


<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_2' of 'constval'</span>
   dout <= '0';

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_1' of 'merge'</span>
   out_right_shift <= dout & dout7 & dout6 & dout5 & dout4 & dout3 & dout2 & dout1;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_0' of 'split'</span>
   mw_U_0temp_din <= in_right_shift;
   u_0combo_proc: <span class=K>PROCESS</span> (mw_U_0temp_din)
   <span class=K>VARIABLE</span> temp_din: <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>BEGIN</span>
      temp_din := mw_U_0temp_din(7 <span class=K>DOWNTO</span> 0);
      dout1 <= temp_din(1);
      dout2 <= temp_din(2);
      dout3 <= temp_din(3);
      dout4 <= temp_din(4);
      dout5 <= temp_din(5);
      dout6 <= temp_din(6);
      dout7 <= temp_din(7);
   <span class=K>END</span> <span class=K>PROCESS</span> u_0combo_proc;

   <span class=C>-- Instance port mappings.</span>

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
