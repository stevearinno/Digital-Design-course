-- VHDL Entity pre_made.ILA_half_adder.symbol
--
-- Created:
--          by - kayra
--          at - 11:30:11 09/09/19
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.2a (Build 3)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY ILA_half_adder IS
   PORT( 
      clk        : IN     std_logic;
      rst_n      : IN     std_logic;
      sw0        : IN     std_logic;
      sw1        : IN     std_logic;
      carry      : OUT    std_logic;
      sum        : OUT    std_logic;
      triggerbit : OUT    std_logic
   );

-- Declarations

END ILA_half_adder ;

--
-- VHDL Architecture pre_made.ILA_half_adder.struct
--
-- Created:
--          by - kayra
--          at - 11:30:10 09/09/19
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.2a (Build 3)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY pre_made;

ARCHITECTURE struct OF ILA_half_adder IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL carry_from_duv : std_logic;
   SIGNAL sum_from_duv   : std_logic;


   -- ModuleWare signal declarations(v1.12) for instance 'carry_dff' of 'adff'
   SIGNAL mw_carry_dffreg_cval : std_logic;

   -- ModuleWare signal declarations(v1.12) for instance 'sum_dff' of 'adff'
   SIGNAL mw_sum_dffreg_cval : std_logic;

   -- Component Declarations
   COMPONENT trigger_counter
   PORT (
      clk        : IN     std_logic;
      rst_n      : IN     std_logic;
      triggerbit : OUT    std_logic
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : trigger_counter USE ENTITY pre_made.trigger_counter;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'carry_dff' of 'adff'
   carry <= mw_carry_dffreg_cval;
   carry_dffseq_proc: PROCESS (clk, rst_n)
   BEGIN
      IF (rst_n = '0') THEN
         mw_carry_dffreg_cval <= '0';
      ELSIF (clk'EVENT AND clk='1') THEN
         mw_carry_dffreg_cval <= carry_from_duv;
      END IF;
   END PROCESS carry_dffseq_proc;

   -- ModuleWare code(v1.12) for instance 'sum_dff' of 'adff'
   sum <= mw_sum_dffreg_cval;
   sum_dffseq_proc: PROCESS (clk, rst_n)
   BEGIN
      IF (rst_n = '0') THEN
         mw_sum_dffreg_cval <= '0';
      ELSIF (clk'EVENT AND clk='1') THEN
         mw_sum_dffreg_cval <= sum_from_duv;
      END IF;
   END PROCESS sum_dffseq_proc;

   -- Instance port mappings.
   U_0 : trigger_counter
      PORT MAP (
         clk        => clk,
         rst_n      => rst_n,
         triggerbit => triggerbit
      );

END struct;
